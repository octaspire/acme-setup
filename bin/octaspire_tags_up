#!/usr/bin/env python
############################################################################
# Octaspire Acme Setup - Scripts to be used with the Acme editor
# Copyright 2019 www.octaspire.com
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
############################################################################
"""
Takes care of creating and managing a TAGS file, so
that user doesn't have to. Creates the TAGS file if
it is missing, or if any of the source files has been
created or modified after the TAGS file was created.

If the TAGS file has been created and is up to date,
does nothing.
"""

import os
import sys

if "OCTASPIRE_PROJECT_ROOT" in os.environ:
    ROOTPATH = os.environ['OCTASPIRE_PROJECT_ROOT']
else:
    print("Error: OCTASPIRE_PROJECT_ROOT environment variable is NOT set.\n"
          "It must point to the root directory of the project you want\n"
          "to work with. HINT: you can set it or change it by running\n"
          "command '. octaspire_project_root' in the root directory of\n"
          "the project (please not the dot in the beginning).")
    sys.exit(1)

TAGSPATH = os.path.join(ROOTPATH, 'TAGS')

def gentags(path, cfiles, dfiles):
    """Creates the TAGS file."""
    print(f"Building {TAGSPATH}")
    cfs = " ".join(cfiles)
    dfs = " ".join(dfiles)
    command1 = f"ctags --fields=S -w -n -f {path} {cfs}"
    command2 = f"ctags --fields=S -w -n -f {path} --append --language-force=scheme {dfs}"
    if os.system(command1):
        print("octaspire_tags_up: ERROR, ctags run failed")
        sys.exit(1)
    if dfiles and os.system(command2):
        print("octaspire_tags_up: ERROR, ctags run failed")
        sys.exit(1)

def checktags():
    """Makes sure TAGS file is created and up to date."""
    regen = False
    tagstime = 0

    if not os.path.isfile(TAGSPATH):
        regen = True
    else:
        tagstime = os.stat(TAGSPATH).st_mtime

    cfiles = []
    dfiles = []

    for directory, _, files in os.walk(ROOTPATH):
        for filename in files:
            fullname = os.path.join(directory, filename)
            if filename.endswith('.c') or filename.endswith('.h'):
                cfiles.append(fullname)
                if not regen and os.stat(fullname).st_mtime >= tagstime:
                    regen = True
            elif filename.endswith('.dern'):
                dfiles.append(fullname)
                if not regen and os.stat(fullname).st_mtime >= tagstime:
                    regen = True

    if regen:
        gentags(TAGSPATH, cfiles, dfiles)

checktags()
